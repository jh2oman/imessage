{"version":3,"sources":["meteor://ðŸ’»app/imessage.js"],"names":[],"mappings":"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","file":"/imessage.js","sourcesContent":["\nMessages = new Mongo.Collection(\"messages\");\n\nif (Meteor.isClient) {\n  //This code runs on the Client\n  Meteor.subscribe(\"messages\");\n  Meteor.subscribe(\"usersList\")\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n\n  Template.body.helpers({\n    messages: function(){\n      var messages = [];\n      var users = Meteor.users.find({}, {sort:{createdAt:-1}});\n      users.forEach(function(user){\n        //if(Session.get(\"searchFilter\"))\n        //messages.push(Messages.findOne({message:{$regex: new RegExp(Session.get(\"searchFilter\"),\"i\")}, contactName: :{$regex: new RegExp(user,\"i\")} }, {sort:{createdAt:-1}}));\n        //else\n        var single = Messages.findOne({contactName :user.username}, {sort:{createdAt:-1}});\n        if(single)\n          messages.push(single);\n      })\n      return messages\n      //console.log(messages);\n    },\n    texts:function(contact){\n      return Messages.find({contactName: contact}, {sort:{createdAt:1}});\n    },\n    usersList: function(){\n      if(Session.get(\"userFilter\"))\n        return Meteor.users.find({username:{$regex: new RegExp(Session.get(\"userFilter\"),\"i\")}}, {sort:{username:-1}});\n      else\n        return Meteor.users.find({}, {sort:{createdAt:-1}});\n    },\n    formatTime: function(time){\n      var hours = time.getHours().toString();\n      var minutes = time.getMinutes().toString();\n\n      if(hours.length<2)\n        hours = \"0\"+ hours;\n      if(minutes.length<2)\n        minutes = \"0\"+ minutes;\n      return hours + \":\" + minutes;\n    },\n    contact: function()\n    {\n      return Session.get(\"contact\");\n    },\n    newMessage: function(){\n      return Session.get(\"newMessage\");\n    },\n    sentOrRecieved:function(){\n      if(this.sent)\n        return \"sent\";\n      else\n        return \"recieved\";\n    },\n    correctUser:function(){\n      if(Meteor.users.findOne({username:  Session.get(\"userFilter\")}))\n        return true;\n      return false;\n    }\n\n  });\n\n  Template.body.events({\n    \"submit .new-message\": function(event){\n      event.preventDefault();\n        var message = event.target.text.value;\n        var userName = $('#userSearch').val();\n        console.log(userName);\n        Meteor.call(\"addMessage\",message, userName);\n        event.target.text.value = \"\";\n        Session.set(\"newMessage\", false);\n        Session.set(\"contact\", userName);\n\n    },\n    \"submit .new-text\": function(event){\n      event.preventDefault();\n        var message = event.target.text.value;\n        var userName = Session.get(\"contact\");\n        console.log(userName);\n        Meteor.call(\"addMessage\",message, userName);\n        event.target.text.value = \"\";\n        \n    },\n    \"click .delete\": function(event){\n      Meteor.call(\"deleteMessage\",this._id);\n    },\n    \"click .read\": function(event){\n      Meteor.call(\"readMessage\",this._id);\n    },\n    \"keyup .search\": function(event){\n      Session.set(\"searchFilter\", $('.search').val());\n    },\n    \"keyup #userSearch\": function(event){\n      Session.set(\"userFilter\", $('#userSearch').val());\n    },\n    \"click .message-box\": function(event){\n      Session.set(\"newMessage\", false);\n      Session.set(\"contact\", this.contactName);\n      console.log(this.contactName);\n      $(this).addClass(\"selected\");\n    },\n    \"click #new\": function(event){\n      Session.set(\"newMessage\", true);\n    }\n  });\n}\n\nMeteor.methods({\n    addMessage: function(message, userName){\n      if(!Meteor.userId())\n        throw new Meteor.Error(\"not-authorized\");\n      var reciever = Meteor.users.findOne({username:  userName});\n      console.log(reciever);\n      if(!reciever)\n        throw new Meteor.Error(\"recipient-not-found.\");\n\n      Messages.insert({\n        message:message,\n          createdAt: new Date(),\n          owner: Meteor.userId(),\n          ownerName: Meteor.user().username,\n          contactName:userName,\n          sent: true\n      });\n      if(username !==Meteor.user().username)\n      {\n        Messages.insert({\n        message:message,\n          createdAt: new Date(),\n          owner: reciever._id,\n          ownerName: userName,\n          contactName: Meteor.user().username,\n          sent:false\n      });\n      }\n      \n    },\n    deleteMessage: function(id){\n      var message = Messages.findOne(id);\n      if(message.owner !==Meteor.userId())\n        throw new Meteor.Error(\"not authorized\");\n      Messages.remove(id);\n    },\n    readMessage: function(id){\n      var message = Messages.findOne(id);\n      if(message.owner !==Meteor.userId())\n        throw new Meteor.Error(\"not authorized\");\n      Messages.update(id, {\n        $set:{isRead: true}\n      });\n    }\n  });\n\nif (Meteor.isServer) {\n  Meteor.publish(\"messages\", function(){\n    return Messages.find({\n      $or: [\n        {owner:this.userId}\n      ]\n    });\n  });\n\n  Meteor.publish(\"usersList\", function(){\n    return Meteor.users.find({}, {fields:{username:1}});\n  });\n}\n"]}